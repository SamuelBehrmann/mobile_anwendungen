// Mocks generated by Mockito 5.4.4 from annotations
// in medi_support/test/ui/screens/create_post/create_post_controller_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:medi_support/ui/screens/create_post/services/create_post_backend_service.dart'
    as _i3;
import 'package:medi_support/ui/screens/create_post/services/create_post_navigation_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CreatePostNavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePostNavigationService extends _i1.Mock
    implements _i2.CreatePostNavigationService {
  MockCreatePostNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void goHome() => super.noSuchMethod(
        Invocation.method(
          #goHome,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showSnackBar({required String? message}) => super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [],
          {#message: message},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CreatePostBackendService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePostBackendService extends _i1.Mock
    implements _i3.CreatePostBackendService {
  MockCreatePostBackendService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> createPost({
    required String? title,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [],
          {
            #title: title,
            #content: content,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
