// Mocks generated by Mockito 5.4.4 from annotations
// in medi_support/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:ui' as _i6;

import 'package:medi_support/ui/screens/chat/chat_controller.dart' as _i10;
import 'package:medi_support/ui/screens/chats/chats_controller.dart' as _i9;
import 'package:medi_support/ui/screens/create_post/create_post_controller.dart'
    as _i5;
import 'package:medi_support/ui/screens/create_post/services/create_post_backend_service.dart'
    as _i3;
import 'package:medi_support/ui/screens/create_post/services/create_post_navigation_service.dart'
    as _i2;
import 'package:medi_support/ui/screens/home/home_controller.dart' as _i8;
import 'package:medi_support/ui/screens/post/post_controller.dart' as _i7;
import 'package:medi_support/ui/screens/profile/profile_controller.dart'
    as _i11;
import 'package:medi_support/ui/screens/search/search_controller.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CreatePostNavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePostNavigationService extends _i1.Mock
    implements _i2.CreatePostNavigationService {
  MockCreatePostNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void goHome() => super.noSuchMethod(
        Invocation.method(
          #goHome,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showSnackBar({required String? message}) => super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [],
          {#message: message},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CreatePostBackendService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePostBackendService extends _i1.Mock
    implements _i3.CreatePostBackendService {
  MockCreatePostBackendService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> createPost({
    required String? title,
    required String? content,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createPost,
          [],
          {
            #title: title,
            #content: content,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CreatePostController].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreatePostController extends _i1.Mock
    implements _i5.CreatePostController {
  MockCreatePostController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void send({
    required String? title,
    required String? body,
    required _i6.VoidCallback? onSend,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #send,
          [],
          {
            #title: title,
            #body: body,
            #onSend: onSend,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goHome() => super.noSuchMethod(
        Invocation.method(
          #goHome,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [PostController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostController extends _i1.Mock implements _i7.PostController {
  MockPostController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void goBack() => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setSelectedMessageToReply({String? messageId}) => super.noSuchMethod(
        Invocation.method(
          #setSelectedMessageToReply,
          [],
          {#messageId: messageId},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void submitReply({required String? message}) => super.noSuchMethod(
        Invocation.method(
          #submitReply,
          [],
          {#message: message},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [HomeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeController extends _i1.Mock implements _i8.HomeController {
  MockHomeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void openSearch() => super.noSuchMethod(
        Invocation.method(
          #openSearch,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openPost({required String? postId}) => super.noSuchMethod(
        Invocation.method(
          #openPost,
          [],
          {#postId: postId},
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatsController].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatsController extends _i1.Mock implements _i9.ChatsController {
  MockChatsController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void openChat(String? chatId) => super.noSuchMethod(
        Invocation.method(
          #openChat,
          [chatId],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void filterChats(String? query) => super.noSuchMethod(
        Invocation.method(
          #filterChats,
          [query],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatController].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatController extends _i1.Mock implements _i10.ChatController {
  MockChatController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void sendMessage(String? message) => super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [message],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deleteMessage(String? messageId) => super.noSuchMethod(
        Invocation.method(
          #deleteMessage,
          [messageId],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ProfileController].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileController extends _i1.Mock implements _i11.ProfileController {
  MockProfileController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void updateName(String? name) => super.noSuchMethod(
        Invocation.method(
          #updateName,
          [name],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateEmail(String? email) => super.noSuchMethod(
        Invocation.method(
          #updateEmail,
          [email],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePhoneNumber(String? phoneNumber) => super.noSuchMethod(
        Invocation.method(
          #updatePhoneNumber,
          [phoneNumber],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updateDescription(String? description) => super.noSuchMethod(
        Invocation.method(
          #updateDescription,
          [description],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatePassword(String? password) => super.noSuchMethod(
        Invocation.method(
          #updatePassword,
          [password],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SearchController].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchController extends _i1.Mock implements _i12.SearchController {
  MockSearchController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void openPost({required String? postId}) => super.noSuchMethod(
        Invocation.method(
          #openPost,
          [],
          {#postId: postId},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onSearch({required String? query}) => super.noSuchMethod(
        Invocation.method(
          #onSearch,
          [],
          {#query: query},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void discardQuery() => super.noSuchMethod(
        Invocation.method(
          #discardQuery,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void goBack() => super.noSuchMethod(
        Invocation.method(
          #goBack,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
